{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { Button, Input, Divider, Text } from 'react-native-elements';\nimport styles from \"./Styles\";\n\nfunction changeScreenOrientation() {\n  return _regeneratorRuntime.async(function changeScreenOrientation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction AddStockTask(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  changeScreenOrientation();\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(SafeAreaView, {\n    style: styles.banner\n  }, React.createElement(Text, {\n    value: \"PANTALLA PRINCIPAL ADMIN\",\n    accessibilityRole: \"header\"\n  })), React.createElement(View, {\n    style: styles.goBackView\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _this.props.navigation.navigate('');\n    }\n  }, React.createElement(Button, {\n    title: \"Volver\",\n    type: \"clear\",\n    accessibilityLabel: \"Submen\\xFA tareas\",\n    accessibilityRole: \"button\",\n    accessibilityHint: \"Vuelve al submen\\xFA de tareas\"\n  }))), React.createElement(View, {\n    style: styles.Input\n  }, React.createElement(Input, {\n    label: \"T\\xEDtulo tarea\",\n    placeholder: \"Introduce una tarea\",\n    accessibilityLabel: \"Introduce una tarea\",\n    accessibilityRole: \"input\",\n    accessibilityHint: \"Introducir el t\\xEDtulo de una tarea\"\n  })), React.createElement(View, {\n    style: styles.Input\n  }, React.createElement(Input, {\n    label: \"Descripci\\xF3n texto\",\n    placeholder: \"Introduce una descripci\\xF3n\",\n    accessibilityLabel: \"descripci\\xF3n de tarea\",\n    accessibilityRole: \"input\",\n    accessibilityHint: \"Describir la tarea a realizar\"\n  })), React.createElement(View, {\n    style: styles.Input\n  }, React.createElement(Input, {\n    label: \"T\\xEDtulo pictograma\",\n    placeholder: \"Introduce un t\\xEDtulo\",\n    accessibilityLabel: \"t\\xEDtulo de pictograma\",\n    accessibilityRole: \"input\",\n    accessibilityHint: \"Introduce un t\\xEDtulo para el pictograma\"\n  })), React.createElement(View, {\n    style: styles.Input\n  }, React.createElement(Input, {\n    label: \"Descripci\\xF3n pictograma\",\n    accessibilityLabel: \"t\\xEDtulo de pictograma\",\n    accessibilityRole: \"input\",\n    accessibilityHint: \"Introduce un t\\xEDtulo para el pictograma\"\n  })), React.createElement(View, null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _this.props.navigation.navigate('');\n    }\n  }, React.createElement(Button, {\n    title: \"A\\xF1adir comanda stock\",\n    type: \"outline\",\n    accessibilityLabel: \"A\\xE1dir comanda\",\n    accessibilityRole: \"button\",\n    accessibilityHint: \"A\\xF1ade la comanda stock a la lista\"\n  }))));\n}\n\nexport default AddStockTask;","map":{"version":3,"sources":["C:/Users/migue/Documents/ultaño/DGP/GuakasDGP/agendaEscolar/AddStockTask.js"],"names":["React","Component","StatusBar","NavigationContainer","createNativeStackNavigator","ScreenOrientation","Button","Input","Divider","Text","styles","changeScreenOrientation","lockAsync","OrientationLock","LANDSCAPE_RIGHT","AddStockTask","navigation","container","banner","goBackView","props","navigate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, SafeAreaView, TouchableOpacity, View, ScrollView} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as ScreenOrientation from 'expo-screen-orientation';\r\nimport { Button, Input, Divider, Text } from 'react-native-elements';\r\nimport styles from './Styles';\r\n\r\n\r\n// Boceto 4: Pantalla principal del administrador\r\n// Para la navegacion, reemplazar adminMenu en navigation\r\n\r\n// Cambiar orientación de la pantalla\r\nasync function changeScreenOrientation() {\r\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT);\r\n}\r\n\r\nfunction AddStockTask({navigation}) {\r\n  changeScreenOrientation();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      \r\n      {/* Accessibility rol  */}\r\n      <SafeAreaView style={styles.banner}>\r\n        <Text value=\"PANTALLA PRINCIPAL ADMIN\" accessibilityRole=\"header\"></Text>\r\n      </SafeAreaView> \r\n\r\n      <View style={styles.goBackView}>\r\n        {/* Volver a la pantalla anterior */}\r\n        <TouchableOpacity onPress={() => this.props.navigation.navigate('')}>\r\n          <Button\r\n          title=\"Volver\"\r\n          type=\"clear\"\r\n          accessibilityLabel=\"Submenú tareas\"\r\n          accessibilityRole=\"button\"\r\n          accessibilityHint=\"Vuelve al submenú de tareas\"\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n        {/* Poner titulo a una tarea */}\r\n        <View style={styles.Input}>\r\n            <Input\r\n                label='Título tarea'\r\n                placeholder='Introduce una tarea'\r\n                accessibilityLabel=\"Introduce una tarea\"\r\n                accessibilityRole=\"input\"\r\n                accessibilityHint=\"Introducir el título de una tarea\"\r\n            />\r\n        </View>\r\n\r\n        {/* Añadir descripción de una tarea */}\r\n        \r\n\r\n        <View style={styles.Input}>\r\n            <Input\r\n                label='Descripción texto'\r\n                placeholder='Introduce una descripción'\r\n                accessibilityLabel=\"descripción de tarea\"\r\n                accessibilityRole=\"input\"\r\n                accessibilityHint=\"Describir la tarea a realizar\"\r\n            />\r\n        </View>\r\n        \r\n        {/* Añadir título al pictograma: va con un icono + */}\r\n        <View style={styles.Input}>\r\n            <Input\r\n                label='Título pictograma'\r\n                placeholder='Introduce un título'\r\n                accessibilityLabel=\"título de pictograma\"\r\n                accessibilityRole=\"input\"\r\n                accessibilityHint=\"Introduce un título para el pictograma\"\r\n            />\r\n        </View>\r\n        {/* Descripción de los pictogramas */}\r\n        <View style={styles.Input}>\r\n            <Input\r\n                label='Descripción pictograma'\r\n                // placeholder='Introduce un título'\r\n                accessibilityLabel=\"título de pictograma\"\r\n                accessibilityRole=\"input\"\r\n                accessibilityHint=\"Introduce un título para el pictograma\"\r\n            />\r\n        </View>\r\n\r\n        {/* Botón para enviar el formulario */}\r\n        <View>\r\n          <TouchableOpacity onPress={() => this.props.navigation.navigate('') }>\r\n            <Button\r\n              title=\"Añadir comanda stock\"\r\n              type=\"outline\"\r\n              accessibilityLabel=\"Aádir comanda\"\r\n              accessibilityRole=\"button\"\r\n              accessibilityHint=\"Añade la comanda stock a la lista\"\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n    </View>\r\n\r\n  )\r\n}\r\n\r\nexport default AddStockTask;"]},"metadata":{},"sourceType":"module"}